pipeline {
  agent any  // <<--- Change this line


  environment {
    SONAR_URL = "http://3.218.156.230:9000"             // ✅ Correct SonarQube URL
    GIT_REPO_NAME = "Jenkins_preparations_for_study"    // ✅ Your GitHub repo
    GIT_USER_NAME = "PavanKumar-sudo"                   // ✅ Your GitHub username
  }

  stages {
    stage('Checkout') {
      steps {
        sh 'echo "Checking out the code..."'
        // No manual git clone needed. Jenkins handles SCM checkout automatically.
      }
    }

    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "pavankumar23/ultimate-cicd:${BUILD_NUMBER}"  // ✅ Your DockerHub repo
        REGISTRY_CREDENTIALS = credentials('docker-cred')           // ✅ Your DockerHub credentials
      }
      steps {
        script {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config --global user.email "pavanvinjamuri212@gmail.com"
            git config --global user.name "PavanKumar-sudo"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
